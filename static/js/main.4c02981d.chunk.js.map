{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["gasTypeList","name","value","App","useState","result","setResult","city","setCity","cities","setCitiesOKKO","gasType","setGasType","dataOKKO","setDataOKKO","useEffect","getDataOKKO","getCitiesOKKO","arr","uniqueCities","Set","map","e","attributes","Naselenyy_punkt","cityABC","sort","Intl","Collator","compare","console","log","a","fetch","response","json","data","collection","getResp","gas","regex","RegExp","filter","notification","match","getAval","res","reg1","reg2","matchedSites","copy","JSON","parse","stringify","slice","search","forEach","i","cutter","className","htmlFor","id","onChange","c","target","xmlns","viewBox","d","type","onClick","length","Adresa","dangerouslySetInnerHTML","__html","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c02981d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nconst gasTypeList = [\n  { name: \"Всі типи\", value: \"\" },\n  { name: \"PULLS 95\", value: \"PULLS 95\" },\n  { name: \"А-95\", value: \"А-95\" },\n  { name: \"ДП\", value: \"ДП\" },\n  { name: \"PULLS Diesel\", value: \"PULLS Diesel\" },\n  { name: \"ГАЗ\", value: \"ГАЗ\" },\n];\n\nfunction App() {\n  const [result, setResult] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [cities, setCitiesOKKO] = useState([]);\n  const [gasType, setGasType] = useState(\"\");\n  const [dataOKKO, setDataOKKO] = useState([]);\n\n  useEffect(() => {\n    getDataOKKO();\n  }, []);\n\n  useEffect(() => {\n    getCitiesOKKO(dataOKKO);\n  }, [dataOKKO]);\n\n  const getCitiesOKKO = (arr) => {\n    const uniqueCities = [\n      ...new Set(arr.map((e) => e.attributes.Naselenyy_punkt)),\n    ];\n    const cityABC = [...uniqueCities].sort(Intl.Collator().compare);\n    setCitiesOKKO(cityABC);\n\n    console.log(\"uniqueCities: \", uniqueCities);\n    console.log(\"cityABC: \", cityABC);\n  };\n\n  const getDataOKKO = async () => {\n    const response = await fetch(\n      \"https://www.okko.ua/api/uk/type/gas_stations?\"\n    );\n    const data = await response.json();\n    setDataOKKO(data.collection);\n  };\n\n  const getResp = async (city, gas) => {\n    const regex = new RegExp(gas);\n\n    const filter = dataOKKO\n      .filter((e) => e.attributes.Naselenyy_punkt === city)\n      .filter((e) => e.attributes.notification.match(regex));\n\n    if (city) {\n      setResult(filter);\n    } else {\n      setResult(dataOKKO);\n    }\n  };\n\n  const cutter = (arr) => {\n    const reg1 = /З ПАЛИВНОЮ КАРТКОЮ І ТАЛОНАМИ ДОСТУПНО:/i;\n    const copy = JSON.parse(JSON.stringify(arr));\n    const cutRes = arr.map((e) =>\n      e.attributes.notification.slice(0, e.attributes.notification.search(reg1))\n    );\n\n    cutRes.forEach((e, i) => {\n      copy[i].attributes.notification = e;\n    });\n\n    return copy;\n  };\n\n  const getAval = (res) => {\n    const reg1 = /ЗА ГОТІВКУ І БАНКІВСЬКІ КАРТКИ ДОСТУПНО:\\*:/i;\n    const reg2 = new RegExp(gasType);\n    const matchedSites = cutter(res)\n      .filter((e) => e.attributes.notification.match(reg1))\n      .filter((e) => e.attributes.notification.match(reg2));\n\n    setResult(matchedSites);\n  };\n\n  const handleCityChange = (e) => {\n    const c = e.target.value;\n    setCity(c);\n    getResp(c, gasType);\n  };\n\n  const handleGasTypeChange = (e) => {\n    const gas = e.target.value;\n    setGasType(gas);\n    getResp(city, gas);\n  };\n\n  return (\n    <div className=\"App container mx-auto px-8 pt-10 pb-20\">\n      <h1 className=\"text-2xl font-bold text-center mb-8\">OKKO фільтр</h1>\n      {/* <button type='button' onClick={() => getResp('')}>Get All AZS</button> */}\n      {/* <button type='button' onClick={() => getAval(result)}>Get AVAL</button> */}\n      <div className=\"w-full max-w-lg mx-auto\">\n        <p className=\"md:flex md:items-center mb-6\">\n          <label\n            className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 md:w-1/4\"\n            htmlFor=\"city\"\n          >\n            Обери місто\n          </label>\n          <div className=\"relative md:w-3/4\">\n            <select\n              name=\"city\"\n              id=\"city\"\n              value={city}\n              onChange={handleCityChange}\n              className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            >\n              <option value=\"\">Вся Україна</option>\n              {cities.map((e, i) => (\n                <option key={i} value={e}>\n                  {e}\n                </option>\n              ))}\n            </select>\n            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n              <svg\n                className=\"fill-current h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n              </svg>\n            </div>\n          </div>\n        </p>\n        <div className=\"mb-6\">\n          <p className=\"md:flex md:items-center\">\n            <label\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 md:w-1/4\"\n              htmlFor=\"gasType\"\n            >\n              Обери паливо\n            </label>\n            <div className=\"md:w-3/4\">\n              <div className=\"relative\">\n                <select\n                  name=\"gasType\"\n                  id=\"gasType\"\n                  value={gasType}\n                  onChange={handleGasTypeChange}\n                  className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                >\n                  {gasTypeList.map((e, i) => (\n                    <option key={i} value={e.value}>\n                      {e.name}\n                    </option>\n                  ))}\n                </select>\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                  <svg\n                    className=\"fill-current h-4 w-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </p>\n          <div className=\"md:text-right\">\n            <small>\n              <i>буде показанно всі АЗС де є колонки з обраним типом палива</i>\n            </small>\n          </div>\n        </div>\n        <p className=\"text-right\">\n          <button\n            className=\"px-4 py-2 font-semibold text-sm bg-cyan-500 text-white rounded-full shadow-sm\"\n            type=\"button\"\n            onClick={() => getAval([...result])}\n          >\n            Показати де обране паливо доступне з Fishka\n          </button>\n        </p>\n      </div>\n      {result && result.length ? (\n        <ul className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-16\">\n          {result.map((e, i) => (\n            <li\n              key={i}\n              className=\"bg-white border-2 border-green-500/100 p-4 rounded-lg shadow-xl text-center\"\n            >\n              <p>\n                {e.attributes.Naselenyy_punkt} - {e.attributes.Adresa}\n              </p>\n              <br />\n              <div\n                dangerouslySetInnerHTML={{ __html: e.attributes.notification }}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className=\"w-full max-w-lg mx-auto mt-16\">\n          {!city && !gasType ? (\n            <div className=\"text-center\">\n              <p className=\"mb-6 text-gray-500\">\n                {`Для показу результатів введіть спершу свій запит`}\n              </p>\n              <img\n                src=\"https://i.gifer.com/1xZ.gif\"\n                alt=\"John Travolta confused\"\n                className=\"object-cover w-full rounded-lg\"\n              />\n            </div>\n          ) : (\n            <div className=\"text-center\">\n              <p className=\"mb-6 text-gray-500\">\n                {`На даний момент паливо марки ${gasType} відсутнє у вільному доступі у місті ${city} `}\n              </p>\n              <img\n                src=\"https://i.gifer.com/5LSi.gif\"\n                alt=\"John Travolta confused\"\n                className=\"object-cover w-full rounded-lg\"\n              />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}